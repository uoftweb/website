### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""A blog article on the site"""
type Article {
  slug: String!
  stargazers(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input ArticleCreateInput {
  slug: String!
  stargazers: UserCreateManyWithoutStarredArticlesInput
}

input ArticleWhereUniqueInput {
  slug: String
}

scalar DateTime

type Mutation {
  createOneArticle(data: ArticleCreateInput!): Article!

  """Star the given article for the current user"""
  starArticle(
    """The slug of the article to star"""
    slug: String!
  ): Article

  """Remove star for the given article for the current user"""
  unstarArticle(
    """The slug of the article to unstar"""
    slug: String!
  ): Article
}

type Query {
  article(where: ArticleWhereUniqueInput!): Article
  articles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int): [Article!]!
  me: User
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

"""A member of the club"""
type User {
  id: Int!
  image: String
  name: String
  starredArticles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int): [Article!]!
}

input UserCreateManyWithoutStarredArticlesInput {
  connect: [UserWhereUniqueInput]
  create: [UserCreateWithoutStarredArticlesInput]
}

input UserCreateWithoutStarredArticlesInput {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  name: String
  updatedAt: DateTime
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
